{"version":3,"file":"static/js/754.cae0eeeb.chunk.js","mappings":"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","sources":["components/Style/Element.styled.js","data/contacts.js","redux/phonebookSlice.js","components/Filter/Filter.jsx","components/ContactForm/ButtonAdd.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/InputName.jsx","components/ContactForm/InputTel.jsx","components/ContactForm/LabelContact.jsx","components/Phonebook/Phonebook.jsx","components/Title/Title.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Title = styled.h1`\n  color: ${p => p.theme.colors.accent};\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.l};\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nconst HomeTitle = styled.h1`\n  color: ${p => p.theme.colors.accent};\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.l};\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  margin: 10px auto;\n`;\n\nconst TitleSecond = styled.h2`\n  color: ${p => p.theme.colors.accent};\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.m};\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\nconst P = styled.p`\n  color: ${p => p.theme.colors.black};\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.m};\n  padding-top: 0px;\n  padding-bottom: 0px;\n  margin: 0px;\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nconst LabelReg = styled.p`\n  color: ${p => p.theme.colors.black};\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.s};\n  padding-top: 0px;\n  padding-bottom: 0px;\n  margin: 0px;\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nconst Input = styled.input`\n  font-size: ${p => p.theme.fontSizes.s};\n`;\n\nconst Form = styled.form`\n  width: 300px;\n  border: 1px black solid;\n  padding: 10px 15px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.header`\n  padding: 20px;\n  display: flex;\n`;\n\nconst HomeContainer = styled.div`\n  padding-top: 20px;\n  display: flex;\n  align-items: center;\n`;\nconst RegisterContainer = styled.div`\n  padding-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst LogInContainer = styled.div`\n  padding-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst ContactsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Button = styled.button`\n  padding: 8px 12px;\n  margin-right: auto;\n  margin-top: ${p => p.theme.space[4]}px;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px black solid;\n  border-radius: 16px;\n  cursor: pointer;\n  transition: color 250ms linear;\n  transition: background-color 250ms linear;\n  transition: border-color 250ms linear;\n  &:hover {\n    color: white;\n\n    background-color: ${p => p.theme.colors.accent};\n    border-color: transparent;\n  }\n`;\n\nconst ContactItem = styled.li`\n  display: flex;\n  align-items: baseline;\n`;\nconst ContactTxt = styled.p`\n  margin: 0 15px;\n  font-size: 16px;\n`;\nconst Contacts = styled.ul`\n  padding: 0px;\n  list-style: none;\n`;\n\nexport {\n  Title,\n  TitleSecond,\n  P,\n  Form,\n  Button,\n  Input,\n  ContactItem,\n  Contacts,\n  ContactTxt,\n  HomeTitle,\n  HomeContainer,\n  ContactsContainer,\n  Header,\n  RegisterContainer,\n  LabelReg,\n  LogInContainer,\n};","import { nanoid } from 'nanoid';\n\nexport const INITIAL_CONTACTS = [\n  { id: nanoid(7), userName: 'Ark', number: '655-65-65' },\n  { id: nanoid(7), userName: 'Alex', number: '277-77-77' },\n  { id: nanoid(7), userName: 'Polly', number: '433-43-43' },\n  { id: nanoid(7), userName: 'Rosie', number: '122-12-12' },\n];","import { INITIAL_CONTACTS } from 'data/contacts';\n\nconst { createSlice } = require('@reduxjs/toolkit');\n\nexport const phonebookSlice = createSlice({\n  name: 'phonebook',\n  initialState: {\n    contacts: INITIAL_CONTACTS,\n    filter: '',\n  },\n  reducers: {\n    addContact(state, action) {\n      console.log(action);\n      console.log(action.payload);\n      state.contacts.push(action.payload);\n    },\n    deleteContact(state, action) {\n      state.contacts = state.contacts.filter(\n        contact => contact.id !== action.payload\n      );\n    },\n    filterContact(state, action) {\n      state.filter = action.payload;\n    },\n  },\n});\n\nexport const { addContact, deleteContact, filterContact } =\n  phonebookSlice.actions;","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/phonebookSlice';\nimport { Input, P } from 'components/Style/Element.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    dispatch(filterContact(event.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <P>Find contacts by name</P>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={onChange}\n        value={filter}\n        placeholder=\"Enter name\"\n      />\n    </div>\n  );\n};","import { Button } from 'components/Style/Element.styled';\nimport PropTypes from 'prop-types';\n\nconst ButtonAdd = ({ text }) => <Button type=\"submit\">{text}</Button>;\n\nexport default ButtonAdd;\n\nButtonAdd.propTypes = {\n  text: PropTypes.string.isRequired,\n};","import PropTypes from 'prop-types';\nimport { Form } from './../Style/Element.styled';\n\nconst ContactForm = ({ onSubmit, children }) => (\n  <Form onSubmit={onSubmit}>{children}</Form>\n);\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import { Input } from 'components/Style/Element.styled';\nimport PropTypes from 'prop-types';\n\nconst InputName = ({ onChange, value }) => (\n  <Input\n    type=\"text\"\n    name=\"name\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    required\n    placeholder=\"Enter name\"\n    onChange={onChange}\n    value={value}\n  />\n);\n\nexport default InputName;\n\nInputName.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};","import { Input } from 'components/Style/Element.styled';\nimport PropTypes from 'prop-types';\n\nconst InputTel = ({ onChange, value }) => (\n  <Input\n    type=\"tel\"\n    name=\"number\"\n    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n    required\n    placeholder=\"123-45-67\"\n    onChange={onChange}\n    value={value}\n  />\n);\n\nexport default InputTel;\n\nInputTel.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};","import { P } from 'components/Style/Element.styled';\nimport PropTypes from 'prop-types';\n\nexport const LabelContact = ({ title, children }) => (\n  <label>\n    <P>{title}</P>\n    {children}\n  </label>\n);\n\nLabelContact.propTypes = {\n  title: PropTypes.string,\n};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/phonebookSlice';\nimport { nanoid } from 'nanoid';\nimport ButtonAdd from 'components/ContactForm/ButtonAdd';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport InputName from 'components/ContactForm/InputName';\nimport InputTel from 'components/ContactForm/InputTel';\nimport { LabelContact } from 'components/ContactForm/LabelContact';\n\nexport const Phonebook = () => {\n  const contacts = useSelector(state => state.contacts);\n  const [userName, setUserName] = useState('');\n  const [number, setNumber] = useState('');\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      setUserName(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const reset = () => {\n    setUserName('');\n    setNumber('');\n  };\n\n  const addContactHandle = data => {\n    const id = nanoid(7);\n    data.id = id;\n    console.log(data);\n    contacts.filter(contact => contact.userName === data.userName).length > 0\n      ? alert(`${userName} is already in contacts.`)\n      : dispatch(addContact({ userName, number, id }));\n  };\n\n  const clickOnBtnAdd = e => {\n    e.preventDefault();\n    addContactHandle({ userName, number });\n    reset();\n    // console.log(this.state);\n  };\n\n  return (\n    <>\n      <ContactForm onSubmit={clickOnBtnAdd}>\n        <LabelContact title=\"Name\" htmlFor={nameInputId}>\n          <InputName value={userName} onChange={handleChange} />\n        </LabelContact>\n        <LabelContact title=\"Number\" htmlFor={numberInputId}>\n          <InputTel value={number} onChange={handleChange} />\n        </LabelContact>\n        <ButtonAdd text=\"Add contact\" />\n      </ContactForm>\n    </>\n  );\n};","import PropTypes from 'prop-types';\nimport { Title, TitleSecond } from 'components/Style/Element.styled';\n\nconst H1 = ({ title }) => <Title>{title}</Title>;\n\nconst H2 = ({ title }) => <TitleSecond>{title}</TitleSecond>;\n\nH1.propTypes = {\n  title: PropTypes.string,\n};\nH2.propTypes = {\n  title: PropTypes.string,\n};\n\nexport { H1, H2 };","import {\n    Button,\n    ContactItem,\n    Contacts,\n    ContactTxt,\n  } from 'components/Style/Element.styled';\n  import { FaUserAlt } from 'react-icons/fa';\n  import { deleteContact } from 'redux/phonebookSlice';\n  import { useDispatch } from 'react-redux';\n  import { useSelector } from 'react-redux';\n  \n  export const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(state => state.contacts);\n  \n    const deleteContactById = contactId => {\n      dispatch(deleteContact(contactId));\n    };\n  \n    const searchFilter = useSelector(state => state.filter);\n  \n    const serchFilterToLowerCase = searchFilter.toLowerCase();\n  \n    const getVisibleContacts = () => {\n      if (searchFilter !== '') {\n        return contacts.filter(({ userName }) =>\n          userName.toLowerCase().includes(serchFilterToLowerCase)\n        );\n      }\n      return contacts;\n    };\n  \n    const visibleContacts = getVisibleContacts();\n  \n    return (\n      <Contacts>\n        {visibleContacts.map(({ userName, number, id }) => {\n          return (\n            <ContactItem key={id}>\n              <FaUserAlt />\n              <ContactTxt>\n                {userName} : {number}\n              </ContactTxt>\n              <Button type=\"button\" onClick={() => deleteContactById(id)}>\n                Delete\n              </Button>\n            </ContactItem>\n          );\n        })}\n      </Contacts>\n    );\n  };","import { useSelector } from 'react-redux';\n\nimport { ContactsContainer, P } from 'components/Style/Element.styled';\nimport { Filter } from 'components/Filter/Filter';\n//import { Box } from 'components/Box/Box';\nimport { Phonebook } from 'components/Phonebook/Phonebook';\nimport { H1, H2 } from 'components/Title/Title';\nimport { ContactList } from 'components/ContactList/ContactList';\n\n//const LS_KEY = 'contacts';\n\nexport const Contacts = () => {\n  const contacts = useSelector(state => state.contacts);\n  console.log(contacts);\n\n  //useEffect(() => {\n  //  localStorage.setItem(LS_KEY, JSON.stringify(contacts));\n  //}, [contacts]);\n\n  return (\n    <ContactsContainer>\n      <H1 title=\"Phonebook\" />\n      <Phonebook />\n      {contacts.length > 0 ? (\n        <>\n          <H2 title=\"Contacts\" />\n          <Filter title=\"Find contact by name\" />\n          <ContactList />\n        </>\n      ) : (\n        <P>Phonebook is empty</P>\n      )}\n    </ContactsContainer>\n  );\n};"],"names":["Title","styled","p","theme","colors","accent","fonts","body","fontSizes","l","space","HomeTitle","TitleSecond","m","P","black","LabelReg","s","Input","Form","HomeContainer","RegisterContainer","LogInContainer","ContactsContainer","Button","ContactItem","ContactTxt","Contacts","INITIAL_CONTACTS","id","nanoid","userName","number","createSlice","require","name","initialState","contacts","filter","reducers","addContact","state","action","console","log","payload","push","deleteContact","contact","filterContact","actions","Filter","useSelector","dispatch","useDispatch","type","pattern","title","onChange","event","currentTarget","value","placeholder","text","onSubmit","children","required","LabelContact","Phonebook","useState","setUserName","setNumber","nameInputId","numberInputId","handleChange","e","preventDefault","data","length","alert","addContactHandle","htmlFor","H1","H2","ContactList","searchFilter","serchFilterToLowerCase","toLowerCase","visibleContacts","includes","map","onClick"],"sourceRoot":""}